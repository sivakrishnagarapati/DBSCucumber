package stepDefinations;

import java.util.ArrayList;
import java.util.List;

import org.junit.Assert;
import org.junit.runner.RunWith;
import org.openqa.selenium.WebDriver;

import CucumberProject.DBSCucumberProject.Base;
import io.cucumber.datatable.DataTable;
import io.cucumber.java.en.And;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import pageObjects.AboutDBSPage;
import pageObjects.AwardsPage;
import pageObjects.HomePage;
import pageObjects.StrongerTogetherPage;
import pageObjects.WriteExcelFileDemo;


public class stepDefination {
	public WebDriver driver = null;
	HomePage homepage;
	StrongerTogetherPage strongertogetherpage;
	AboutDBSPage aboutdbspage;
	AwardsPage awardspage;
	
	@Given("^Browser is launched and DBS web URL is entered$")
    public void browser_is_launched_and_dbs_web_url_is_entered() throws Throwable {
		driver = Base.getDriver();
    }

    @When("^User click on Learn More button$")
    public void user_click_on_learn_more_button() throws Throwable {
    	homepage = new HomePage(driver);
    	homepage.learnMore().click();
        
    }

    @Then("^Read the table in excel sheet$")
    public void read_the_table_in_excel_sheet() throws Throwable {
    	strongertogetherpage= new StrongerTogetherPage(driver);
    	System.out.println(strongertogetherpage.Table());
    	String[] valueToWrite=strongertogetherpage.Table();
    	WriteExcelFileDemo objExcelFile = new WriteExcelFileDemo();
    	objExcelFile.writeExcel(System.getProperty("user.dir")+"\\src\\excelExportAndFileIO","ExportExcel.xlsx","ExcelDemo",valueToWrite);
    }

    @Then("^Validate the total number of awards$")
    public void validate_the_total_number_of_awards() throws Throwable {
    	awardspage = new AwardsPage(driver);
    	Assert.assertEquals(22, awardspage.awardTitle());
    }

    @And("^User navigate to Singapore$")
    public void user_navigate_to_singapore() throws Throwable {
    	strongertogetherpage= new StrongerTogetherPage(driver);
    	strongertogetherpage.Singapore().click();
    	Thread.sleep(2000);
    	        
    }

    @And("^User navigate to About in the header tabs$")
    public void user_navigate_to_about_in_the_header_tabs() throws Throwable {
    	strongertogetherpage= new StrongerTogetherPage(driver);
    	strongertogetherpage.About().click();
    }

    @And("^User navigate to Who we are tab$")
    public void user_navigate_to_who_we_are_tab() throws Throwable {
    	aboutdbspage = new AboutDBSPage(driver);
    	aboutdbspage.whoWeAre().click();
    }

    @And("^User navigate to Our Awards & Accolades$")
    public void user_navigate_to_our_awards_accolades() throws Throwable {
    	aboutdbspage = new AboutDBSPage(driver);
    	aboutdbspage.ourAwards().click();
    }

    @And("^validate the name and caption of the awards$")
    public void validate_the_name_and_caption_of_the_awards(DataTable data) throws Throwable {
    	awardspage = new AwardsPage(driver);
    	List<String> dt=data.asList();
    	String awardname=dt.get(0);
    	String caption=dt.get(1);
    	
    	String[] awardArray = awardname.split(";");
    	List<String> awardList = new ArrayList<String>();
    	for (String str : awardArray) {
    	    awardList.add(str);
    	}
    	
    	String[] captionArray = caption.split(";");
    	List<String> captionList = new ArrayList<String>();
    	for (String stry : captionArray) {
    		captionList.add(stry);
    	}
    	
    	for (int i=0;i<awardspage.awardCaption().size();i++)
    	{
    		String cName=awardspage.awardCaption().get(i).getText();
    		if(captionList.contains(cName))
    		{
    			String aName=awardspage.awardTitleName().get(i).getText();
    			
    			if(awardList.contains(aName))
    			{
    				int j=0;
    				Assert.assertTrue(true);
    				j++;
    				if(j==awardList.size()-1)
    				{
    					break;
    				}
    			}
    		}
    	}
    	
    }


}
